#!/bin/bash
#ddev-generated - Do not modify this file; your modifications will be overwritten.

function getMagento2_ThemeStoreCodes() {

    # check if mysql is installed
    if ! command -v mysql &> /dev/null; then
        echo -e "\n${txtred}mysql could not be found.${txtrst}"
        echo -e "${txtred}Please install mysql.${txtrst}\n"
        exit 1
    fi

    THEME_CODES_DB=$(mysql -e "SELECT code FROM theme" | cut -d ' ' -f 2-)
    THEME_CODES_DB=${THEME_CODES_DB#code}
    THEME_CODES_DB=$(echo "$THEME_CODES_DB" | sed '/^$/d')
    THEME_CODES_DB_COUNT=$(echo $THEME_CODES_DB | wc -w)
}

function getThemesFromDB() {
    getMagento2_ThemeStoreCodes
    if [ -n "$THEME_CODES_DB" ]; then
        for THEME_CODE in $THEME_CODES_DB; do
            echo -e "${txtpur}- $THEME_CODE ${txtrst}"
        done
    fi
}

function addThemesToConfig() {
    if [ -f $PROJECT_CONFIG_FILE ]; then

        getMagento2_ThemeStoreCodes

        ADDEDTHEMES=0
        LINE=4

        echo -en "\n${txtcyn}Woodoo has found ${txtpur}$THEME_CODES_DB_COUNT Themes${txtcyn} in your Database.${txtrst}"
        echo -en "\n${txtcyn}Add the Theme below to $PROJECT_CONFIG_FILE if you want add it to the Build-Process later:${txtrst}\n\n"

        if grep -q "themes:" $PROJECT_CONFIG_FILE; then
            echo -e "\n${txtgrn}${ICON_SUCCESS} Themes-Section already exist in $PROJECT_CONFIG_FILE ${txtrst}\n"
        else
            sed -i $LINE'i\themes:' $PROJECT_CONFIG_FILE
        fi

        for THEME_CODE in $THEME_CODES_DB; do

            ((LINE++))

            # checks if theme is already in config-themes.yaml
            if grep -q "$THEME_CODE" $PROJECT_CONFIG_FILE; then
                echo -en "${txtylw}${ICON_ERROR} Theme "$THEME_CODE" already exists (skipped)${txtrst}\n\n"
                continue
            fi

            echo -en "ðŸ“Ž Add Theme ${txtpur}$THEME_CODE${txtrst}? [y/n] "
            read -r answer
            if [ "$answer" = "y" ] || [ "$answer" = "yes" ] || [ "$answer" = "Y" ] || [ "$answer" = "YES" ] || [ "$answer" = "ja" ] || [ "$answer" = "" ]; then
                THEME_PATH="path/to/theme"
                sed -i $LINE'i\  - '$THEME_CODE': "'$THEME_PATH'"' $PROJECT_CONFIG_FILE
                echo -en "${txtgrn}${ICON_SUCCESS} Theme "$THEME_CODE" added!${txtrst}\n\n"
                ((ADDEDTHEMES++))
            else
                ((LINE--))
                echo -en "${txtylw}${ICON_ERROR} Theme "$THEME_CODE" skipped ${txtrst}\n\n"
            fi

        done
        echo -en "${txtgrn}${ICON_SUCCESS} $ADDEDTHEMES of $THEME_CODES_DB_COUNT Themes added to $PROJECT_CONFIG_FILE ${txtrst}\n"

    fi
}

function readThemesInConfig() {

    THEMES_IN_CONFIG=""

    if [ ! -f $PROJECT_CONFIG_FILE ]; then
        echo -e "\n${txtred}No $PROJECT_CONFIG_FILE found.' ${txtrst}\n"
        exit 0
    fi

    # Read config-themes.yaml to get available themes
    while read -r line; do
        # Check whether the line with "Themes:" begins
        if [[ "$line" =~ ^themes: ]]; then
            while read -r next_line; do
                # Check whether the next line begins with "-"
                if [[ -n "$next_line" && "$next_line" =~ ^- ]]; then
                    THEMES_IN_CONFIG="$THEMES_IN_CONFIG $(echo $next_line | cut -d ' ' -f 2 | cut -d ':' -f 1)"

                else
                    break
                fi
            done
        fi
    done < $PROJECT_CONFIG_FILE
}

# Count Themes by reading config-themes.yaml with readThemesInConfig()
function countThemesinConfig() {

    readThemesInConfig

    if [ -n "$THEMES_IN_CONFIG" ]; then
        THEMES_COUNT=$(echo $THEMES_IN_CONFIG | wc -w)
        echo $THEMES_COUNT
    fi

}

# get all available themes in config-themes.yaml
function getThemesInConfig() {

    readThemesInConfig

    # get themes line by line
    if [ -n "$THEMES_IN_CONFIG" ]; then
        for THEME_CODE in $THEMES_IN_CONFIG; do
            echo -e "${txtpur}- $THEME_CODE ${txtrst}"
        done
    fi

}

#check all available themes in config-themes.yaml if the path is not "path/to/theme"
function checkThemePathExists() {

    readThemesInConfig

    PATH_ERROR=false

    if [ -z "$THEMES_IN_CONFIG" ]; then
        echo -e "\n${txtred}No Themes found in $PROJECT_CONFIG_FILE${txtrst}\n"
    else

        # Check if only one theme is configured
        if [[ $(countThemesinConfig) == 1 ]]; then
            echo -e "\n${txtgrn}$(countThemesinConfig) Theme added to ${txtcyn}$PROJECT_CONFIG_FILE${txtrst}\n"
        else
            echo -e "\n${txtgrn}$(countThemesinConfig) Themes added to ${txtcyn}$PROJECT_CONFIG_FILE${txtrst}\n"
        fi

        for THEME_CODE in $THEMES_IN_CONFIG; do
            while read -r line; do
                # Check whether the line with "Themes:" begins
                if [[ "$line" =~ ^themes: ]]; then
                    while read -r next_line; do
                        THEME_PATHES_VALID=null
                        # Check whether the next line begins with "-"
                        if [[ -n "$next_line" && "$next_line" =~ ^- ]]; then
                            if [[ "$next_line" =~ $THEME_CODE ]]; then
                                THEME_PATH=$(echo $next_line | cut -d ' ' -f 3 | cut -d '"' -f 2)
                                if [[ "$THEME_PATH" == "path/to/theme" ]]; then
                                    echo -e "${txtred}${ICON_ERROR} Theme ${txtpur}$THEME_CODE ${txtred}has not been configured yet.${txtrst}"
                                    THEME_PATHES_VALID=false
                                    PATH_ERROR=true
                                else
                                    # if $THEME_PATHES_VALID not false and registration.php exists in $THEME_PATH
                                    if [[ "$THEME_PATHES_VALID" != false && -f $THEME_PATH/registration.php ]]; then
                                        THEME_PATHES_VALID=true
                                        echo -e "${txtgrn}${ICON_SUCCESS} Theme ${txtpur}$THEME_CODE ${txtgrn}has been correct configured.${txtrst}"
                                    else
                                        THEME_PATHES_VALID=false
                                        PATH_ERROR=true
                                        echo -e "${txtred}${ICON_ERROR} Theme ${txtpur}$THEME_CODE ${txtred}has not been configured correctly.${txtrst}"
                                    fi
                                fi
                            fi
                        fi
                    done
                    break
                fi
            done < $PROJECT_CONFIG_FILE
        done
        #if checkThemePathExists has an error, it will exit the script
        if $PATH_ERROR; then
            echo -e "\n${txtylw}${ICON_WARNING} Some Theme-Paths are invalid! Please check your $PROJECT_CONFIG_FILE ${txtrst}\n"
            exit 0
        else
            echo -e "\n${txtgrn}${ICON_SUCCESS} All Theme-Paths are valid!${txtrst}\n"
        fi
    fi
}

if [[ "$1" = "init" || "$1" = "install" || "$1" = "i" ]]; then
    addThemesToConfig
fi

if [[ "$1" = "themes" && "$2" = "check" ]]; then
    checkThemePathExists
fi


if [[ "$1" = "themes" && "$2" == "" ]]; then

    echo -e "\n${txtgrn}Themes found in Database:\n"
    getThemesFromDB

    checkThemePathExists
    echo -e ""
fi
